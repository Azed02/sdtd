- name: Clone Prometheus repository
  git:
    repo: 'https://github.com/techiescamp/kubernetes-prometheus'
    dest: '/home/jpakin/3A/sdtd/sdtd/k8s_setup/roles/apps/tasks/prometheus'

- name: Create monitoring namespace
  command: kubectl --kubeconfig=/home/asmae/.kube/config create namespace monitoring
  when: inventory_hostname in groups['control-plane']

- name: Create Prometheus ClusterRole and ClusterRoleBinding
  shell: |
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: prometheus
    rules:
    - apiGroups: [""]
      resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
      verbs: ["get", "list", "watch"]
    - apiGroups:
      - extensions
      resources:
      - ingresses
      verbs: ["get", "list", "watch"]
    - nonResourceURLs: ["/metrics"]
      verbs: ["get"]
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: prometheus
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: prometheus
    subjects:
    - kind: ServiceAccount
      name: default
      namespace: monitoring
    EOF
  when: inventory_hostname in groups['control-plane']

- name: Create Prometheus ConfigMap
  shell: |
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: prometheus-server-conf
      labels:
        name: prometheus-server-conf
      namespace: monitoring
    data:
      prometheus.rules: |-
        groups:
        - name: devopscube demo alert
          rules:
          - alert: High Pod Memory
            expr: sum(container_memory_usage_bytes) > 1
            for: 1m
            labels:
              severity: slack
            annotations:
              summary: High Memory Usage
      prometheus.yml: |-
        global:
          scrape_interval: 5s
          evaluation_interval: 5s
        rule_files:
          - /etc/prometheus/prometheus.rules
        alerting:
          alertmanagers:
          - scheme: http
            static_configs:
              - targets:
                - "alertmanager.monitoring.svc:9093"
        scrape_configs:
          - job_name: 'node-exporter'
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                regex: 'node-exporter'
                action: keep
          - job_name: 'kubernetes-apiservers'
            kubernetes_sd_configs:
              - role: endpoints
            relabel_configs:
              - source_labels: [__meta_kubernetes_endpoints_name]
                regex: 'kubernetes'
                action: keep
    EOF
  delegate_to: master

- name: Create Prometheus Deployment
  shell: |
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: prometheus-deployment
      namespace: monitoring
      labels:
        app: prometheus-server
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: prometheus-server
      template:
        metadata:
          labels:
            app: prometheus-server
        spec:
          containers:
            - name: prometheus
              image: prom/prometheus
              args:
                - "--storage.tsdb.retention.time=12h"
                - "--config.file=/etc/prometheus/prometheus.yml"
                - "--storage.tsdb.path=/prometheus/"
              ports:
                - containerPort: 9090
              resources:
                requests:
                  cpu: 500m
                  memory: 500M
                limits:
                  cpu: 1
                  memory: 1Gi
              volumeMounts:
                - name: prometheus-config-volume
                  mountPath: /etc/prometheus/
                - name: prometheus-storage-volume
                  mountPath: /prometheus/
          volumes:
            - name: prometheus-config-volume
              configMap:
                defaultMode: 420
                name: prometheus-server-conf
      
            - name: prometheus-storage-volume
              emptyDir: {}
     EOF
  when: inventory_hostname in groups['control-plane']


- name: Create Prometheus Service (node port)
  shell: |
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
      apiVersion: v1
      kind: Service
      metadata:
        name: prometheus-service
        namespace: monitoring
        annotations:
            prometheus.io/scrape: 'true'
            prometheus.io/port:   '9090'
      spec:
        selector: 
          app: prometheus-server
        type: NodePort  
        ports:
          - port: 8080
            targetPort: 9090 
            nodePort: 30000
     EOF
  when: inventory_hostname in groups['control-plane']
