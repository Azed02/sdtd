- name: Clone Grapahan repository
  git:
    repo: 'https://github.com/bibinwilson/kubernetes-grafana.git'
    dest: '/home/jpakin/3A/sdtd/sdtd/k8s_setup/roles/apps/tasks/graphana'

- name: create Grafana configmap
  shell: |  # grafana-datasource-config.yaml
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: grafana-datasources
      namespace: monitoring
    data:
      prometheus.yaml: |-
        {
            "apiVersion": 1,
            "datasources": [
                {
                  "access":"proxy",
                    "editable": true,
                    "name": "prometheus",
                    "orgId": 1,
                    "type": "prometheus",
                    "url": "http://prometheus-service.monitoring.svc:8080",
                    "version": 1
                }
            ]
        }
     EOF
  when: inventory_hostname in groups['control-plane']

- name: Deploy Grafana On Kubernetes
  shell: |  # deployment.yaml
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: grafana
      namespace: monitoring
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: grafana
      template:
        metadata:
          name: grafana
          labels:
            app: grafana
        spec:
          containers:
          - name: grafana
            image: grafana/grafana:latest
            ports:
            - name: grafana
              containerPort: 3000
            resources:
              limits:
                memory: "1Gi"
                cpu: "1000m"
              requests: 
                memory: 500M
                cpu: "500m"
            volumeMounts:
              - mountPath: /var/lib/grafana
                name: grafana-storage
              - mountPath: /etc/grafana/provisioning/datasources
                name: grafana-datasources
                readOnly: false
          volumes:
            - name: grafana-storage
              emptyDir: {}
            - name: grafana-datasources
              configMap:
                  defaultMode: 420
                  name: grafana-datasources
     EOF
  when: inventory_hostname in groups['control-plane']

- name: create Grafana service
  shell: |  # grafana-datasource-config.yaml
    kubectl --kubeconfig=/home/asmae/.kube/config apply -f - <<EOF
    apiVersion: v1
    kind: Service
    metadata:
      name: grafana
      namespace: monitoring
      annotations:
          prometheus.io/scrape: 'true'
          prometheus.io/port:   '3000'
    spec:
      selector: 
        app: grafana
      type: NodePort  
      ports:
        - port: 3000
          targetPort: 3000
          nodePort: 32000
     EOF
  when: inventory_hostname in groups['control-plane']